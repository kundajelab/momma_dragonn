[
    {
        "message": "example model and training config",
        "model_trainer":{
            "class": "keras_model_trainer.KerasFitGeneratorModelTrainer",
            "kwargs": {
                "seed": 1234,
                "samples_per_epoch": 30,
                "stopping_criterion_config": {
                    "class": "EarlyStopping" ,
                    "kwargs": {
                       "max_epochs": 300,
                       "epochs_to_wait": 3
                    }
                },
                #"class_weight": {"0":1, "1":25}
            }
        },
        "model_creator":{
            "class": "flexible_keras.FlexibleKerasSequential",
            "kwargs": {
                "layers_config": [
                    {
                        "class": "keras.layers.convolutional.Convolution1D",
                        "kwargs": {

                            "input_shape": [200,4],
                            "nb_filter": 50,
                            "filter_length": 15,
                            "border_mode": "same",
                        }
                    },
                    {
                        "class": "keras.layers.core.Activation",
                        "kwargs": {"activation": "relu"}
                    },
                    {
                        "class": "keras.layers.convolutional.Convolution1D",
                        "kwargs": {
                            "nb_filter": 50,
                            "filter_length": 15,
                            "border_mode": "same"
                        }
                    },
                    {
                        "class": "keras.layers.core.Activation",
                        "kwargs": {"activation": "relu"}
                    },
                    {
                        "class": "keras.layers.convolutional.Convolution1D",
                        "kwargs": {"nb_filter": 50, "filter_length": 13}
                    },
                    {
                        "class": "keras.layers.core.Activation",
                        "kwargs": {"activation": "relu"}
                    },
                    {
                        "class": "keras.layers.convolutional.MaxPooling1D",
                        "kwargs": {"pool_length": 40, "stride": 40}
                    },
                    {
                        "class": "keras.layers.core.Flatten",
                        "kwargs": {}
                    },
                    {
                        "class": "keras.layers.core.Dense",
                        "kwargs": {"output_dim": 50}
                    },
                    {
                        "class": "keras.layers.core.Activation",
                        "kwargs": {"activation": "relu"}
                    },

                    {
                        "name": "fc1_batchnorm",
                        "class": "keras.layers.normalization.BatchNormalization",
                        "kwargs": {
                        "axis": -1
                    }
                    },
                    {
                        "name": "fc1_dropout",
                        "class": "keras.layers.core.Dropout",
                        "kwargs": {
                        "p": 0.2
                    }
                    },
                    {
                    # FC dense layer 2
                        "class": "keras.layers.core.Dense",
                        "kwargs": {"output_dim": 1}
                    },
                    {

                        "class": "keras.layers.core.Activation",
                        "kwargs": {"activation": "sigmoid"}
                     }
                ],
                "optimizer_config": {
                    "class": "keras.optimizers.Adam",
                    "kwargs": {"lr": 0.001}
                },
                "loss": "binary_crossentropy" 
            }
        },
        "other_data_loaders":{
            "train": {
                "class": "fasta_inmemory_data_loader.TwoStreamSeqOnly",
                "kwargs": {
                   "batch_size": 50,
                   "positives_fasta_source": "train_positives.simdata.gz",
                   "negatives_fasta_source": "train_negatives.simdata.gz",
                   "fasta_col": 1,
                   "negatives_to_positives_ratio": 5,
                   "rc_augment": true,
                   "num_to_load_for_eval": 5000, 
                   "labels_dtype": "int"
                }
            }
        },
    }
]
